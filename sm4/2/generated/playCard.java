/*
 * generated by Fujaba - CodeGen2
 */
import de.uni_kassel.features.annotation.util.Property; // requires Fujaba5/libs/features.jar in classpath
import de.uni_kassel.features.ReferenceHandler; // requires Fujaba5/libs/features.jar in classpath


public abstract class playCard
{



   public  playCard ()
   {
   }

   /**
    * <pre>
    *           1     happens     1
    * playCard ------------------------- Turn
    *           playCard               turn
    * </pre>
    */
   public static final String PROPERTY_TURN = "turn";

   @Property( name = PROPERTY_TURN, partner = Turn.PROPERTY_PLAY_CARD, kind = ReferenceHandler.ReferenceKind.TO_ONE,
         adornment = ReferenceHandler.Adornment.NONE)
   private Turn turn;

   @Property( name = PROPERTY_TURN )
   public boolean setTurn (Turn value)
   {
      boolean changed = false;

      if (this.turn != value)
      {
      
         Turn oldValue = this.turn;
         playCard source = this;
         if (this.turn != null)
         {
            this.turn = null;
            oldValue.setPlayCard (null);
         }
         this.turn = value;

         if (value != null)
         {
            value.setPlayCard (this);
         }
         changed = true;
      
      }
      return changed;
   }

   @Property( name = PROPERTY_TURN )
   public playCard withTurn (Turn value)
   {
      setTurn (value);
      return this;
   }

   public Turn getTurn ()
   {
      return this.turn;
   }

   public void removeYou()
   {
      this.setTurn (null);
   }
}


