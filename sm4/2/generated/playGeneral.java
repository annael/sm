/*
 * generated by Fujaba - CodeGen2
 */
import de.upb.tools.sdm.*; // requires Fujaba5/libs/RuntimeTools.jar in classpath
import java.util.*;


public class playGeneral extends playCard
{



   public void playCard ()
   {
      boolean fujaba__Success = false;
      Player player2 = null;
      Iterator fujaba__IterPlayer2ToCard2 = null;
      Card card2 = null;

      // story pattern storypatternwiththis
      try 
      {
         fujaba__Success = false; 

         // check object card1 is really bound
         JavaSDM.ensure ( card1 != null );
         // check object cardsInPlay is really bound
         JavaSDM.ensure ( cardsInPlay != null );
         // check object player1 is really bound
         JavaSDM.ensure ( player1 != null );
         // check object turn is really bound
         JavaSDM.ensure ( turn != null );
         // check link has from turn to player1
         JavaSDM.ensure (player1.equals (turn.getPlayer ()));

         // search to-one link before from player1 to player2
         player2 = player1.getNext ();

         // check object player2 is really bound
         JavaSDM.ensure ( player2 != null );

         // check isomorphic binding between objects player2 and player1
         JavaSDM.ensure ( !player2.equals (player1) );


         // check link has from card1 to player1
         JavaSDM.ensure (card1.hasInPlayer (player1));

         // destroy link has from card1 to player1
         card1.removeFromPlayer (player1);
         // create link ontop from cardsInPlay to card1
         cardsInPlay.setTop (card1);

         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      // story pattern Successor of storypatternwiththis
      try 
      {
         fujaba__Success = false; 

         // check object card1 is really bound
         JavaSDM.ensure ( card1 != null );
         // check object cardsInPlay is really bound
         JavaSDM.ensure ( cardsInPlay != null );
         // check object player1 is really bound
         JavaSDM.ensure ( player1 != null );
         // check object player2 is really bound
         JavaSDM.ensure ( player2 != null );
         // check object turn is really bound
         JavaSDM.ensure ( turn != null );
         // check isomorphic binding between objects player2 and player1
         JavaSDM.ensure ( !player2.equals (player1) );

         // check link ontop from cardsInPlay to card1
         JavaSDM.ensure (card1.equals (cardsInPlay.getOntop ()));

         // check link before from player2 to player1
         JavaSDM.ensure (player1.equals (player2.getFirst ()));

         // check link has from turn to player1
         JavaSDM.ensure (player1.equals (turn.getPlayer ()));

         // iterate to-many link has from player2 to card2
         fujaba__Success = false;
         fujaba__IterPlayer2ToCard2 = player2.iteratorOfCard ();

         while ( !(fujaba__Success) && fujaba__IterPlayer2ToCard2.hasNext () )
         {
            try
            {
               card2 = (Card) fujaba__IterPlayer2ToCard2.next ();

               // check object card2 is really bound
               JavaSDM.ensure ( card2 != null );
               // check isomorphic binding between objects card2 and card1
               JavaSDM.ensure ( !card2.equals (card1) );


               fujaba__Success = true;
            }
            catch ( JavaSDMException fujaba__InternalException )
            {
               fujaba__Success = false;
            }
         }
         JavaSDM.ensure (fujaba__Success);
         // destroy link has from turn to player1
         turn.setPlayer (null);
         // destroy link has from card2 to player2
         card2.removeFromPlayer (player2);
         // create link ontop from card2 to cardsInPlay
         card2.setBottom (cardsInPlay);

         // create link has from turn to player2
         turn.setPlayer (player2);

         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      return ;
   }

}


